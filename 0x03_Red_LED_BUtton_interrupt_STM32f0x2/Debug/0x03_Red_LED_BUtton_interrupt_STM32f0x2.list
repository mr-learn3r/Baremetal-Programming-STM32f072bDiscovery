
0x03_Red_LED_BUtton_interrupt_STM32f0x2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008a8  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000968  08000970  00001970  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000968  08000968  00001970  2**0
                  CONTENTS
  4 .ARM          00000000  08000968  08000968  00001970  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000968  08000970  00001970  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000968  08000968  00001968  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800096c  0800096c  0000196c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001970  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000970  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000970  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00001970  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a7d  00000000  00000000  00001998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002f8  00000000  00000000  00002415  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  00002710  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000008b  00000000  00000000  000027d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002148  00000000  00000000  00002863  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000010c2  00000000  00000000  000049ab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000883b  00000000  00000000  00005a6d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000e2a8  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000022c  00000000  00000000  0000e2ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000078  00000000  00000000  0000e518  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000950 	.word	0x08000950

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	08000950 	.word	0x08000950

08000108 <delay>:
#include <GPIO_drv.h>

#define DELAY  100000

void delay(void)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	af00      	add	r7, sp, #0
    for(uint32_t i = 0; i < DELAY; i++);
 800010e:	2300      	movs	r3, #0
 8000110:	607b      	str	r3, [r7, #4]
 8000112:	e002      	b.n	800011a <delay+0x12>
 8000114:	687b      	ldr	r3, [r7, #4]
 8000116:	3301      	adds	r3, #1
 8000118:	607b      	str	r3, [r7, #4]
 800011a:	687b      	ldr	r3, [r7, #4]
 800011c:	4a03      	ldr	r2, [pc, #12]	@ (800012c <delay+0x24>)
 800011e:	4293      	cmp	r3, r2
 8000120:	d9f8      	bls.n	8000114 <delay+0xc>
}
 8000122:	46c0      	nop			@ (mov r8, r8)
 8000124:	46c0      	nop			@ (mov r8, r8)
 8000126:	46bd      	mov	sp, r7
 8000128:	b002      	add	sp, #8
 800012a:	bd80      	pop	{r7, pc}
 800012c:	0001869f 	.word	0x0001869f

08000130 <main>:

int main(void)
{
 8000130:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000132:	b089      	sub	sp, #36	@ 0x24
 8000134:	af00      	add	r7, sp, #0
    GPIO_Handle_t Red_Led, Button;

    memset(&Red_Led, 0, sizeof(Red_Led));
 8000136:	2418      	movs	r4, #24
 8000138:	193b      	adds	r3, r7, r4
 800013a:	2208      	movs	r2, #8
 800013c:	2100      	movs	r1, #0
 800013e:	0018      	movs	r0, r3
 8000140:	f000 fbda 	bl	80008f8 <memset>
    memset(&Button, 0, sizeof(Button));
 8000144:	2510      	movs	r5, #16
 8000146:	197b      	adds	r3, r7, r5
 8000148:	2208      	movs	r2, #8
 800014a:	2100      	movs	r1, #0
 800014c:	0018      	movs	r0, r3
 800014e:	f000 fbd3 	bl	80008f8 <memset>

	Red_Led.pGPIOx = GPIOA;
 8000152:	193b      	adds	r3, r7, r4
 8000154:	2290      	movs	r2, #144	@ 0x90
 8000156:	05d2      	lsls	r2, r2, #23
 8000158:	601a      	str	r2, [r3, #0]
    Red_Led.pGPIO_Pinconfig = &(GPIO_Pinconfig_t) {
 800015a:	2608      	movs	r6, #8
 800015c:	19bb      	adds	r3, r7, r6
 800015e:	0018      	movs	r0, r3
 8000160:	2306      	movs	r3, #6
 8000162:	001a      	movs	r2, r3
 8000164:	2100      	movs	r1, #0
 8000166:	f000 fbc7 	bl	80008f8 <memset>
 800016a:	0031      	movs	r1, r6
 800016c:	187b      	adds	r3, r7, r1
 800016e:	2208      	movs	r2, #8
 8000170:	701a      	strb	r2, [r3, #0]
 8000172:	187b      	adds	r3, r7, r1
 8000174:	2201      	movs	r2, #1
 8000176:	705a      	strb	r2, [r3, #1]
 8000178:	187b      	adds	r3, r7, r1
 800017a:	2202      	movs	r2, #2
 800017c:	709a      	strb	r2, [r3, #2]
 800017e:	193b      	adds	r3, r7, r4
 8000180:	187a      	adds	r2, r7, r1
 8000182:	605a      	str	r2, [r3, #4]
        .PinSpeed = GPIO_SPEED_FAST,
        .PinPUPDControl = GPIO_PIN_NO_PUPD,
        .PinOPType = GPIO_OP_TYPE_PP
    };

    Button.pGPIOx = GPIOD;
 8000184:	197b      	adds	r3, r7, r5
 8000186:	4a27      	ldr	r2, [pc, #156]	@ (8000224 <main+0xf4>)
 8000188:	601a      	str	r2, [r3, #0]
    Button.pGPIO_Pinconfig = &(GPIO_Pinconfig_t) {
 800018a:	003b      	movs	r3, r7
 800018c:	0018      	movs	r0, r3
 800018e:	2306      	movs	r3, #6
 8000190:	001a      	movs	r2, r3
 8000192:	2100      	movs	r1, #0
 8000194:	f000 fbb0 	bl	80008f8 <memset>
 8000198:	003b      	movs	r3, r7
 800019a:	2202      	movs	r2, #2
 800019c:	701a      	strb	r2, [r3, #0]
 800019e:	003b      	movs	r3, r7
 80001a0:	2204      	movs	r2, #4
 80001a2:	705a      	strb	r2, [r3, #1]
 80001a4:	003b      	movs	r3, r7
 80001a6:	2202      	movs	r2, #2
 80001a8:	709a      	strb	r2, [r3, #2]
 80001aa:	003b      	movs	r3, r7
 80001ac:	2201      	movs	r2, #1
 80001ae:	70da      	strb	r2, [r3, #3]
 80001b0:	197b      	adds	r3, r7, r5
 80001b2:	003a      	movs	r2, r7
 80001b4:	605a      	str	r2, [r3, #4]
        .PinMode = GPIO_MODE_IT_FT,
        .PinSpeed = GPIO_SPEED_FAST,
        .PinPUPDControl = GPIO_PIN_PU
    };

    if (GPIO_pClckCtrl(Red_Led.pGPIOx, ENABLE) != GPIO_OK ||
 80001b6:	193b      	adds	r3, r7, r4
 80001b8:	681b      	ldr	r3, [r3, #0]
 80001ba:	2101      	movs	r1, #1
 80001bc:	0018      	movs	r0, r3
 80001be:	f000 fa0d 	bl	80005dc <GPIO_pClckCtrl>
 80001c2:	1e03      	subs	r3, r0, #0
 80001c4:	d113      	bne.n	80001ee <main+0xbe>
    	GPIO_pClckCtrl(Button.pGPIOx, ENABLE) != GPIO_OK ||
 80001c6:	197b      	adds	r3, r7, r5
 80001c8:	681b      	ldr	r3, [r3, #0]
 80001ca:	2101      	movs	r1, #1
 80001cc:	0018      	movs	r0, r3
 80001ce:	f000 fa05 	bl	80005dc <GPIO_pClckCtrl>
 80001d2:	1e03      	subs	r3, r0, #0
    if (GPIO_pClckCtrl(Red_Led.pGPIOx, ENABLE) != GPIO_OK ||
 80001d4:	d10b      	bne.n	80001ee <main+0xbe>
           GPIO_init(&Red_Led) != GPIO_OK ||
 80001d6:	193b      	adds	r3, r7, r4
 80001d8:	0018      	movs	r0, r3
 80001da:	f000 f85f 	bl	800029c <GPIO_init>
 80001de:	1e03      	subs	r3, r0, #0
    	GPIO_pClckCtrl(Button.pGPIOx, ENABLE) != GPIO_OK ||
 80001e0:	d105      	bne.n	80001ee <main+0xbe>
           GPIO_init(&Button) != GPIO_OK) {
 80001e2:	197b      	adds	r3, r7, r5
 80001e4:	0018      	movs	r0, r3
 80001e6:	f000 f859 	bl	800029c <GPIO_init>
 80001ea:	1e03      	subs	r3, r0, #0
           GPIO_init(&Red_Led) != GPIO_OK ||
 80001ec:	d002      	beq.n	80001f4 <main+0xc4>
           // Handle error
           return -1;
 80001ee:	2301      	movs	r3, #1
 80001f0:	425b      	negs	r3, r3
 80001f2:	e013      	b.n	800021c <main+0xec>
    }


    GPIO_WriteToOutputPin(GPIOA,Red_Led.pGPIO_Pinconfig->PinNum,0);
 80001f4:	2318      	movs	r3, #24
 80001f6:	18fb      	adds	r3, r7, r3
 80001f8:	685b      	ldr	r3, [r3, #4]
 80001fa:	7819      	ldrb	r1, [r3, #0]
 80001fc:	2390      	movs	r3, #144	@ 0x90
 80001fe:	05db      	lsls	r3, r3, #23
 8000200:	2200      	movs	r2, #0
 8000202:	0018      	movs	r0, r3
 8000204:	f000 fab4 	bl	8000770 <GPIO_WriteToOutputPin>

    /* IRQ configuration */
    GPIO_IRQPriorityConfig(IRQ_NO_EXTI2_3, NVIC_IRQ_PRI3);
 8000208:	2103      	movs	r1, #3
 800020a:	2006      	movs	r0, #6
 800020c:	f000 fb1e 	bl	800084c <GPIO_IRQPriorityConfig>
    GPIO_IRQConfig(IRQ_NO_EXTI2_3, ENABLE);
 8000210:	2101      	movs	r1, #1
 8000212:	2006      	movs	r0, #6
 8000214:	f000 faee 	bl	80007f4 <GPIO_IRQConfig>

    while(1);
 8000218:	46c0      	nop			@ (mov r8, r8)
 800021a:	e7fd      	b.n	8000218 <main+0xe8>

    return 0;
}
 800021c:	0018      	movs	r0, r3
 800021e:	46bd      	mov	sp, r7
 8000220:	b009      	add	sp, #36	@ 0x24
 8000222:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000224:	48000c00 	.word	0x48000c00

08000228 <EXTI2_3_IRQHandler>:

void EXTI2_3_IRQHandler(void)
{
 8000228:	b580      	push	{r7, lr}
 800022a:	af00      	add	r7, sp, #0
	delay();
 800022c:	f7ff ff6c 	bl	8000108 <delay>
    GPIO_IRQHandler(GPIO_PIN_NO_2);
 8000230:	2002      	movs	r0, #2
 8000232:	f000 fb41 	bl	80008b8 <GPIO_IRQHandler>
    GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_8);
 8000236:	2390      	movs	r3, #144	@ 0x90
 8000238:	05db      	lsls	r3, r3, #23
 800023a:	2108      	movs	r1, #8
 800023c:	0018      	movs	r0, r3
 800023e:	f000 fac3 	bl	80007c8 <GPIO_ToggleOutputPin>
}
 8000242:	46c0      	nop			@ (mov r8, r8)
 8000244:	46bd      	mov	sp, r7
 8000246:	bd80      	pop	{r7, pc}

08000248 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000248:	480d      	ldr	r0, [pc, #52]	@ (8000280 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800024a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800024c:	e000      	b.n	8000250 <Reset_Handler+0x8>
 800024e:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000250:	480c      	ldr	r0, [pc, #48]	@ (8000284 <LoopForever+0x6>)
  ldr r1, =_edata
 8000252:	490d      	ldr	r1, [pc, #52]	@ (8000288 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000254:	4a0d      	ldr	r2, [pc, #52]	@ (800028c <LoopForever+0xe>)
  movs r3, #0
 8000256:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000258:	e002      	b.n	8000260 <LoopCopyDataInit>

0800025a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800025a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800025c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800025e:	3304      	adds	r3, #4

08000260 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000260:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000262:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000264:	d3f9      	bcc.n	800025a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000266:	4a0a      	ldr	r2, [pc, #40]	@ (8000290 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000268:	4c0a      	ldr	r4, [pc, #40]	@ (8000294 <LoopForever+0x16>)
  movs r3, #0
 800026a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800026c:	e001      	b.n	8000272 <LoopFillZerobss>

0800026e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800026e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000270:	3204      	adds	r2, #4

08000272 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000272:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000274:	d3fb      	bcc.n	800026e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000276:	f000 fb47 	bl	8000908 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800027a:	f7ff ff59 	bl	8000130 <main>

0800027e <LoopForever>:

LoopForever:
  b LoopForever
 800027e:	e7fe      	b.n	800027e <LoopForever>
  ldr   r0, =_estack
 8000280:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8000284:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000288:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800028c:	08000970 	.word	0x08000970
  ldr r2, =_sbss
 8000290:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000294:	2000001c 	.word	0x2000001c

08000298 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000298:	e7fe      	b.n	8000298 <ADC_COMP_IRQHandler>
	...

0800029c <GPIO_init>:
 * ===============================================================================================
 */

/* Initialize and Deinitialize */
GPIO_Status_t GPIO_init(GPIO_Handle_t *pGPIOhandle)
{
 800029c:	b580      	push	{r7, lr}
 800029e:	b084      	sub	sp, #16
 80002a0:	af00      	add	r7, sp, #0
 80002a2:	6078      	str	r0, [r7, #4]

    uint32_t pinOffset = (2 * pGPIOhandle->pGPIO_Pinconfig->PinNum);
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	685b      	ldr	r3, [r3, #4]
 80002a8:	781b      	ldrb	r3, [r3, #0]
 80002aa:	005b      	lsls	r3, r3, #1
 80002ac:	60fb      	str	r3, [r7, #12]

	/* GPIO pin mode configuration */
	if(pGPIOhandle->pGPIO_Pinconfig->PinMode<= GPIO_MODE_ANALOG)
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	685b      	ldr	r3, [r3, #4]
 80002b2:	785b      	ldrb	r3, [r3, #1]
 80002b4:	2b03      	cmp	r3, #3
 80002b6:	d81c      	bhi.n	80002f2 <GPIO_init+0x56>
	{
		/* Non interrupt mode */
		pGPIOhandle->pGPIOx->MODER  &= ~(0x3 << pinOffset); //Clearing pin
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	681a      	ldr	r2, [r3, #0]
 80002be:	2103      	movs	r1, #3
 80002c0:	68fb      	ldr	r3, [r7, #12]
 80002c2:	4099      	lsls	r1, r3
 80002c4:	000b      	movs	r3, r1
 80002c6:	43db      	mvns	r3, r3
 80002c8:	0019      	movs	r1, r3
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	400a      	ands	r2, r1
 80002d0:	601a      	str	r2, [r3, #0]
		pGPIOhandle->pGPIOx->MODER |= (pGPIOhandle->pGPIO_Pinconfig->PinMode << pinOffset);
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	681a      	ldr	r2, [r3, #0]
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	685b      	ldr	r3, [r3, #4]
 80002dc:	785b      	ldrb	r3, [r3, #1]
 80002de:	0019      	movs	r1, r3
 80002e0:	68fb      	ldr	r3, [r7, #12]
 80002e2:	4099      	lsls	r1, r3
 80002e4:	000b      	movs	r3, r1
 80002e6:	0019      	movs	r1, r3
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	430a      	orrs	r2, r1
 80002ee:	601a      	str	r2, [r3, #0]
 80002f0:	e0b9      	b.n	8000466 <GPIO_init+0x1ca>
	}
	else
	{
		/*Interrupt mode*/
		if(pGPIOhandle->pGPIO_Pinconfig->PinMode == GPIO_MODE_IT_FT)
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	685b      	ldr	r3, [r3, #4]
 80002f6:	785b      	ldrb	r3, [r3, #1]
 80002f8:	2b04      	cmp	r3, #4
 80002fa:	d119      	bne.n	8000330 <GPIO_init+0x94>
		{
			/* Configure the FTSR */
			EXTI->EXTI_FTSR |= (1 << pGPIOhandle->pGPIO_Pinconfig->PinNum);
 80002fc:	4baf      	ldr	r3, [pc, #700]	@ (80005bc <GPIO_init+0x320>)
 80002fe:	68da      	ldr	r2, [r3, #12]
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	685b      	ldr	r3, [r3, #4]
 8000304:	781b      	ldrb	r3, [r3, #0]
 8000306:	0019      	movs	r1, r3
 8000308:	2301      	movs	r3, #1
 800030a:	408b      	lsls	r3, r1
 800030c:	0019      	movs	r1, r3
 800030e:	4bab      	ldr	r3, [pc, #684]	@ (80005bc <GPIO_init+0x320>)
 8000310:	430a      	orrs	r2, r1
 8000312:	60da      	str	r2, [r3, #12]
			/* Clear corresponding RTSR bit */
			EXTI->EXTI_RTSR &= ~(1 << pGPIOhandle->pGPIO_Pinconfig->PinNum);
 8000314:	4ba9      	ldr	r3, [pc, #676]	@ (80005bc <GPIO_init+0x320>)
 8000316:	689a      	ldr	r2, [r3, #8]
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	685b      	ldr	r3, [r3, #4]
 800031c:	781b      	ldrb	r3, [r3, #0]
 800031e:	0019      	movs	r1, r3
 8000320:	2301      	movs	r3, #1
 8000322:	408b      	lsls	r3, r1
 8000324:	43db      	mvns	r3, r3
 8000326:	0019      	movs	r1, r3
 8000328:	4ba4      	ldr	r3, [pc, #656]	@ (80005bc <GPIO_init+0x320>)
 800032a:	400a      	ands	r2, r1
 800032c:	609a      	str	r2, [r3, #8]
 800032e:	e03b      	b.n	80003a8 <GPIO_init+0x10c>
		}
		else if(pGPIOhandle->pGPIO_Pinconfig->PinMode == GPIO_MODE_IT_RT)
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	685b      	ldr	r3, [r3, #4]
 8000334:	785b      	ldrb	r3, [r3, #1]
 8000336:	2b05      	cmp	r3, #5
 8000338:	d119      	bne.n	800036e <GPIO_init+0xd2>
		{
			/* Configure the RTSR */
			EXTI->EXTI_RTSR |= (1 << pGPIOhandle->pGPIO_Pinconfig->PinNum);
 800033a:	4ba0      	ldr	r3, [pc, #640]	@ (80005bc <GPIO_init+0x320>)
 800033c:	689a      	ldr	r2, [r3, #8]
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	685b      	ldr	r3, [r3, #4]
 8000342:	781b      	ldrb	r3, [r3, #0]
 8000344:	0019      	movs	r1, r3
 8000346:	2301      	movs	r3, #1
 8000348:	408b      	lsls	r3, r1
 800034a:	0019      	movs	r1, r3
 800034c:	4b9b      	ldr	r3, [pc, #620]	@ (80005bc <GPIO_init+0x320>)
 800034e:	430a      	orrs	r2, r1
 8000350:	609a      	str	r2, [r3, #8]
			/* Clear corresponding FTSR bit */
			EXTI->EXTI_FTSR &= ~(1 << pGPIOhandle->pGPIO_Pinconfig->PinNum);
 8000352:	4b9a      	ldr	r3, [pc, #616]	@ (80005bc <GPIO_init+0x320>)
 8000354:	68da      	ldr	r2, [r3, #12]
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	685b      	ldr	r3, [r3, #4]
 800035a:	781b      	ldrb	r3, [r3, #0]
 800035c:	0019      	movs	r1, r3
 800035e:	2301      	movs	r3, #1
 8000360:	408b      	lsls	r3, r1
 8000362:	43db      	mvns	r3, r3
 8000364:	0019      	movs	r1, r3
 8000366:	4b95      	ldr	r3, [pc, #596]	@ (80005bc <GPIO_init+0x320>)
 8000368:	400a      	ands	r2, r1
 800036a:	60da      	str	r2, [r3, #12]
 800036c:	e01c      	b.n	80003a8 <GPIO_init+0x10c>
		}
		else if(pGPIOhandle->pGPIO_Pinconfig->PinMode == GPIO_MODE_IT_FRT)
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	685b      	ldr	r3, [r3, #4]
 8000372:	785b      	ldrb	r3, [r3, #1]
 8000374:	2b06      	cmp	r3, #6
 8000376:	d117      	bne.n	80003a8 <GPIO_init+0x10c>
		{
			/* Configure the FTSR */
			EXTI->EXTI_FTSR |= (1 << pGPIOhandle->pGPIO_Pinconfig->PinNum);
 8000378:	4b90      	ldr	r3, [pc, #576]	@ (80005bc <GPIO_init+0x320>)
 800037a:	68da      	ldr	r2, [r3, #12]
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	685b      	ldr	r3, [r3, #4]
 8000380:	781b      	ldrb	r3, [r3, #0]
 8000382:	0019      	movs	r1, r3
 8000384:	2301      	movs	r3, #1
 8000386:	408b      	lsls	r3, r1
 8000388:	0019      	movs	r1, r3
 800038a:	4b8c      	ldr	r3, [pc, #560]	@ (80005bc <GPIO_init+0x320>)
 800038c:	430a      	orrs	r2, r1
 800038e:	60da      	str	r2, [r3, #12]
			/* Configure the RTSR */
			EXTI->EXTI_RTSR |= (1 << pGPIOhandle->pGPIO_Pinconfig->PinNum);
 8000390:	4b8a      	ldr	r3, [pc, #552]	@ (80005bc <GPIO_init+0x320>)
 8000392:	689a      	ldr	r2, [r3, #8]
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	685b      	ldr	r3, [r3, #4]
 8000398:	781b      	ldrb	r3, [r3, #0]
 800039a:	0019      	movs	r1, r3
 800039c:	2301      	movs	r3, #1
 800039e:	408b      	lsls	r3, r1
 80003a0:	0019      	movs	r1, r3
 80003a2:	4b86      	ldr	r3, [pc, #536]	@ (80005bc <GPIO_init+0x320>)
 80003a4:	430a      	orrs	r2, r1
 80003a6:	609a      	str	r2, [r3, #8]
		}

    /* Configure GPIO port selection in SYSCFG_EXTICR */
     uint8_t EXTICRgroup = (pGPIOhandle->pGPIO_Pinconfig->PinNum)/4;
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	685b      	ldr	r3, [r3, #4]
 80003ac:	781a      	ldrb	r2, [r3, #0]
 80003ae:	230b      	movs	r3, #11
 80003b0:	18fb      	adds	r3, r7, r3
 80003b2:	0892      	lsrs	r2, r2, #2
 80003b4:	701a      	strb	r2, [r3, #0]
     uint8_t offset = (pGPIOhandle->pGPIO_Pinconfig->PinNum) % 4;
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	685b      	ldr	r3, [r3, #4]
 80003ba:	781a      	ldrb	r2, [r3, #0]
 80003bc:	230a      	movs	r3, #10
 80003be:	18fb      	adds	r3, r7, r3
 80003c0:	2103      	movs	r1, #3
 80003c2:	400a      	ands	r2, r1
 80003c4:	701a      	strb	r2, [r3, #0]
     uint8_t value = GPIO_BASEADDR_TO_VALUE(pGPIOhandle->pGPIOx);
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	681a      	ldr	r2, [r3, #0]
 80003ca:	2390      	movs	r3, #144	@ 0x90
 80003cc:	05db      	lsls	r3, r3, #23
 80003ce:	429a      	cmp	r2, r3
 80003d0:	d024      	beq.n	800041c <GPIO_init+0x180>
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	4a7a      	ldr	r2, [pc, #488]	@ (80005c0 <GPIO_init+0x324>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d01d      	beq.n	8000418 <GPIO_init+0x17c>
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	4a78      	ldr	r2, [pc, #480]	@ (80005c4 <GPIO_init+0x328>)
 80003e2:	4293      	cmp	r3, r2
 80003e4:	d016      	beq.n	8000414 <GPIO_init+0x178>
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	4a77      	ldr	r2, [pc, #476]	@ (80005c8 <GPIO_init+0x32c>)
 80003ec:	4293      	cmp	r3, r2
 80003ee:	d00f      	beq.n	8000410 <GPIO_init+0x174>
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	4a75      	ldr	r2, [pc, #468]	@ (80005cc <GPIO_init+0x330>)
 80003f6:	4293      	cmp	r3, r2
 80003f8:	d008      	beq.n	800040c <GPIO_init+0x170>
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	681b      	ldr	r3, [r3, #0]
 80003fe:	4a74      	ldr	r2, [pc, #464]	@ (80005d0 <GPIO_init+0x334>)
 8000400:	4293      	cmp	r3, r2
 8000402:	d101      	bne.n	8000408 <GPIO_init+0x16c>
 8000404:	2305      	movs	r3, #5
 8000406:	e00a      	b.n	800041e <GPIO_init+0x182>
 8000408:	2300      	movs	r3, #0
 800040a:	e008      	b.n	800041e <GPIO_init+0x182>
 800040c:	2304      	movs	r3, #4
 800040e:	e006      	b.n	800041e <GPIO_init+0x182>
 8000410:	2303      	movs	r3, #3
 8000412:	e004      	b.n	800041e <GPIO_init+0x182>
 8000414:	2302      	movs	r3, #2
 8000416:	e002      	b.n	800041e <GPIO_init+0x182>
 8000418:	2301      	movs	r3, #1
 800041a:	e000      	b.n	800041e <GPIO_init+0x182>
 800041c:	2300      	movs	r3, #0
 800041e:	2009      	movs	r0, #9
 8000420:	183a      	adds	r2, r7, r0
 8000422:	7013      	strb	r3, [r2, #0]
     SYSCFG_PCLCK_ENABLE();
 8000424:	4b6b      	ldr	r3, [pc, #428]	@ (80005d4 <GPIO_init+0x338>)
 8000426:	699a      	ldr	r2, [r3, #24]
 8000428:	4b6a      	ldr	r3, [pc, #424]	@ (80005d4 <GPIO_init+0x338>)
 800042a:	2101      	movs	r1, #1
 800042c:	430a      	orrs	r2, r1
 800042e:	619a      	str	r2, [r3, #24]
     SYSCFG->SYSCFG_EXTICR[EXTICRgroup] = value << (offset * 4);
 8000430:	183b      	adds	r3, r7, r0
 8000432:	781a      	ldrb	r2, [r3, #0]
 8000434:	230a      	movs	r3, #10
 8000436:	18fb      	adds	r3, r7, r3
 8000438:	781b      	ldrb	r3, [r3, #0]
 800043a:	009b      	lsls	r3, r3, #2
 800043c:	409a      	lsls	r2, r3
 800043e:	0011      	movs	r1, r2
 8000440:	4a65      	ldr	r2, [pc, #404]	@ (80005d8 <GPIO_init+0x33c>)
 8000442:	230b      	movs	r3, #11
 8000444:	18fb      	adds	r3, r7, r3
 8000446:	781b      	ldrb	r3, [r3, #0]
 8000448:	3302      	adds	r3, #2
 800044a:	009b      	lsls	r3, r3, #2
 800044c:	5099      	str	r1, [r3, r2]

     /* Enable EXTI interrupt delivery using IMR */
     EXTI->EXTI_IMR |= (1 << pGPIOhandle->pGPIO_Pinconfig->PinNum);
 800044e:	4b5b      	ldr	r3, [pc, #364]	@ (80005bc <GPIO_init+0x320>)
 8000450:	681a      	ldr	r2, [r3, #0]
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	685b      	ldr	r3, [r3, #4]
 8000456:	781b      	ldrb	r3, [r3, #0]
 8000458:	0019      	movs	r1, r3
 800045a:	2301      	movs	r3, #1
 800045c:	408b      	lsls	r3, r1
 800045e:	0019      	movs	r1, r3
 8000460:	4b56      	ldr	r3, [pc, #344]	@ (80005bc <GPIO_init+0x320>)
 8000462:	430a      	orrs	r2, r1
 8000464:	601a      	str	r2, [r3, #0]
//    // GPIO pin mode configuration
//    pGPIOhandle->pGPIOx->MODER &= ~(0x3 << pinOffset); // Clearing pin
//    pGPIOhandle->pGPIOx->MODER |= (pGPIOhandle->pGPIO_Pinconfig->PinMode << pinOffset); // Setting pin

    // GPIO pin speed configuration
    pGPIOhandle->pGPIOx->OSPEEDR &= ~(0x3 << pinOffset); // Clearing pin
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	689a      	ldr	r2, [r3, #8]
 800046c:	2103      	movs	r1, #3
 800046e:	68fb      	ldr	r3, [r7, #12]
 8000470:	4099      	lsls	r1, r3
 8000472:	000b      	movs	r3, r1
 8000474:	43db      	mvns	r3, r3
 8000476:	0019      	movs	r1, r3
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	400a      	ands	r2, r1
 800047e:	609a      	str	r2, [r3, #8]
    pGPIOhandle->pGPIOx->OSPEEDR |= (pGPIOhandle->pGPIO_Pinconfig->PinSpeed << pinOffset); // Setting pin
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	681b      	ldr	r3, [r3, #0]
 8000484:	689a      	ldr	r2, [r3, #8]
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	685b      	ldr	r3, [r3, #4]
 800048a:	789b      	ldrb	r3, [r3, #2]
 800048c:	0019      	movs	r1, r3
 800048e:	68fb      	ldr	r3, [r7, #12]
 8000490:	4099      	lsls	r1, r3
 8000492:	000b      	movs	r3, r1
 8000494:	0019      	movs	r1, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	430a      	orrs	r2, r1
 800049c:	609a      	str	r2, [r3, #8]

    // GPIO pull up/down settings configuration
    pGPIOhandle->pGPIOx->PUPDR &= ~(0x3 << pinOffset); // Clearing pin
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	68da      	ldr	r2, [r3, #12]
 80004a4:	2103      	movs	r1, #3
 80004a6:	68fb      	ldr	r3, [r7, #12]
 80004a8:	4099      	lsls	r1, r3
 80004aa:	000b      	movs	r3, r1
 80004ac:	43db      	mvns	r3, r3
 80004ae:	0019      	movs	r1, r3
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	400a      	ands	r2, r1
 80004b6:	60da      	str	r2, [r3, #12]
    pGPIOhandle->pGPIOx->PUPDR |= (pGPIOhandle->pGPIO_Pinconfig->PinPUPDControl << pinOffset); // Setting pin
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	681b      	ldr	r3, [r3, #0]
 80004bc:	68da      	ldr	r2, [r3, #12]
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	685b      	ldr	r3, [r3, #4]
 80004c2:	78db      	ldrb	r3, [r3, #3]
 80004c4:	0019      	movs	r1, r3
 80004c6:	68fb      	ldr	r3, [r7, #12]
 80004c8:	4099      	lsls	r1, r3
 80004ca:	000b      	movs	r3, r1
 80004cc:	0019      	movs	r1, r3
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	430a      	orrs	r2, r1
 80004d4:	60da      	str	r2, [r3, #12]


    /* GPIO output type configuration */
    pGPIOhandle->pGPIOx->OTYPER  &= ~(0x1 << pinOffset);
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	685a      	ldr	r2, [r3, #4]
 80004dc:	2101      	movs	r1, #1
 80004de:	68fb      	ldr	r3, [r7, #12]
 80004e0:	4099      	lsls	r1, r3
 80004e2:	000b      	movs	r3, r1
 80004e4:	43db      	mvns	r3, r3
 80004e6:	0019      	movs	r1, r3
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	400a      	ands	r2, r1
 80004ee:	605a      	str	r2, [r3, #4]
    pGPIOhandle->pGPIOx->OTYPER |= (pGPIOhandle->pGPIO_Pinconfig->PinPUPDControl << pinOffset); // Setting pin
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	685a      	ldr	r2, [r3, #4]
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	685b      	ldr	r3, [r3, #4]
 80004fa:	78db      	ldrb	r3, [r3, #3]
 80004fc:	0019      	movs	r1, r3
 80004fe:	68fb      	ldr	r3, [r7, #12]
 8000500:	4099      	lsls	r1, r3
 8000502:	000b      	movs	r3, r1
 8000504:	0019      	movs	r1, r3
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	430a      	orrs	r2, r1
 800050c:	605a      	str	r2, [r3, #4]


	 if(pGPIOhandle->pGPIO_Pinconfig->PinMode == GPIO_MODE_ALTFN)
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	685b      	ldr	r3, [r3, #4]
 8000512:	785b      	ldrb	r3, [r3, #1]
 8000514:	2b02      	cmp	r3, #2
 8000516:	d14c      	bne.n	80005b2 <GPIO_init+0x316>
	    {
	        /* Alt functionality registers configuration */
	        uint8_t LowHigherRegGPIO;

	        LowHigherRegGPIO = pGPIOhandle->pGPIO_Pinconfig->PinNum / 8;
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	685b      	ldr	r3, [r3, #4]
 800051c:	781a      	ldrb	r2, [r3, #0]
 800051e:	2008      	movs	r0, #8
 8000520:	183b      	adds	r3, r7, r0
 8000522:	08d2      	lsrs	r2, r2, #3
 8000524:	701a      	strb	r2, [r3, #0]
	        if(LowHigherRegGPIO>7)
 8000526:	183b      	adds	r3, r7, r0
 8000528:	781b      	ldrb	r3, [r3, #0]
 800052a:	2b07      	cmp	r3, #7
 800052c:	d920      	bls.n	8000570 <GPIO_init+0x2d4>
			{
	        	pGPIOhandle->pGPIOx->AFRL &= ~(0xF << (4 * LowHigherRegGPIO));
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	6a1a      	ldr	r2, [r3, #32]
 8000534:	183b      	adds	r3, r7, r0
 8000536:	781b      	ldrb	r3, [r3, #0]
 8000538:	009b      	lsls	r3, r3, #2
 800053a:	210f      	movs	r1, #15
 800053c:	4099      	lsls	r1, r3
 800053e:	000b      	movs	r3, r1
 8000540:	43db      	mvns	r3, r3
 8000542:	0019      	movs	r1, r3
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	400a      	ands	r2, r1
 800054a:	621a      	str	r2, [r3, #32]
	        	pGPIOhandle->pGPIOx->AFRL |= pGPIOhandle->pGPIO_Pinconfig->PinAltFuncMode << (4 * LowHigherRegGPIO);
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	6a1a      	ldr	r2, [r3, #32]
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	685b      	ldr	r3, [r3, #4]
 8000556:	795b      	ldrb	r3, [r3, #5]
 8000558:	0019      	movs	r1, r3
 800055a:	183b      	adds	r3, r7, r0
 800055c:	781b      	ldrb	r3, [r3, #0]
 800055e:	009b      	lsls	r3, r3, #2
 8000560:	4099      	lsls	r1, r3
 8000562:	000b      	movs	r3, r1
 8000564:	0019      	movs	r1, r3
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	430a      	orrs	r2, r1
 800056c:	621a      	str	r2, [r3, #32]
 800056e:	e020      	b.n	80005b2 <GPIO_init+0x316>
			}
	        else
	        {
	        	pGPIOhandle->pGPIOx->AFRH &= ~(0xF << (4 * LowHigherRegGPIO));
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000576:	2008      	movs	r0, #8
 8000578:	183b      	adds	r3, r7, r0
 800057a:	781b      	ldrb	r3, [r3, #0]
 800057c:	009b      	lsls	r3, r3, #2
 800057e:	210f      	movs	r1, #15
 8000580:	4099      	lsls	r1, r3
 8000582:	000b      	movs	r3, r1
 8000584:	43db      	mvns	r3, r3
 8000586:	0019      	movs	r1, r3
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	400a      	ands	r2, r1
 800058e:	625a      	str	r2, [r3, #36]	@ 0x24
	        	pGPIOhandle->pGPIOx->AFRH |= pGPIOhandle->pGPIO_Pinconfig->PinAltFuncMode << (4 * LowHigherRegGPIO);
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	685b      	ldr	r3, [r3, #4]
 800059a:	795b      	ldrb	r3, [r3, #5]
 800059c:	0019      	movs	r1, r3
 800059e:	183b      	adds	r3, r7, r0
 80005a0:	781b      	ldrb	r3, [r3, #0]
 80005a2:	009b      	lsls	r3, r3, #2
 80005a4:	4099      	lsls	r1, r3
 80005a6:	000b      	movs	r3, r1
 80005a8:	0019      	movs	r1, r3
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	430a      	orrs	r2, r1
 80005b0:	625a      	str	r2, [r3, #36]	@ 0x24
	        }
	    }
	return GPIO_OK;
 80005b2:	2300      	movs	r3, #0
}
 80005b4:	0018      	movs	r0, r3
 80005b6:	46bd      	mov	sp, r7
 80005b8:	b004      	add	sp, #16
 80005ba:	bd80      	pop	{r7, pc}
 80005bc:	40010400 	.word	0x40010400
 80005c0:	48000400 	.word	0x48000400
 80005c4:	48000800 	.word	0x48000800
 80005c8:	48000c00 	.word	0x48000c00
 80005cc:	48001000 	.word	0x48001000
 80005d0:	48001400 	.word	0x48001400
 80005d4:	40021000 	.word	0x40021000
 80005d8:	40010000 	.word	0x40010000

080005dc <GPIO_pClckCtrl>:
 * Return value			: NULL
 *
 * ===============================================================================================
 */

GPIO_Status_t GPIO_pClckCtrl(GPIO_Reg_t *pGPIOx, uint8_t state) {
 80005dc:	b580      	push	{r7, lr}
 80005de:	b082      	sub	sp, #8
 80005e0:	af00      	add	r7, sp, #0
 80005e2:	6078      	str	r0, [r7, #4]
 80005e4:	000a      	movs	r2, r1
 80005e6:	1cfb      	adds	r3, r7, #3
 80005e8:	701a      	strb	r2, [r3, #0]
    if (state != ENABLE && state != DISABLE)
 80005ea:	1cfb      	adds	r3, r7, #3
 80005ec:	781b      	ldrb	r3, [r3, #0]
 80005ee:	2b01      	cmp	r3, #1
 80005f0:	d005      	beq.n	80005fe <GPIO_pClckCtrl+0x22>
 80005f2:	1cfb      	adds	r3, r7, #3
 80005f4:	781b      	ldrb	r3, [r3, #0]
 80005f6:	2b00      	cmp	r3, #0
 80005f8:	d001      	beq.n	80005fe <GPIO_pClckCtrl+0x22>
        return GPIO_ERROR_INVALID_STATE_VALUE;
 80005fa:	2303      	movs	r3, #3
 80005fc:	e09b      	b.n	8000736 <GPIO_pClckCtrl+0x15a>

    switch ((uint32_t)pGPIOx) {
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	4a4f      	ldr	r2, [pc, #316]	@ (8000740 <GPIO_pClckCtrl+0x164>)
 8000602:	4293      	cmp	r3, r2
 8000604:	d100      	bne.n	8000608 <GPIO_pClckCtrl+0x2c>
 8000606:	e080      	b.n	800070a <GPIO_pClckCtrl+0x12e>
 8000608:	4a4d      	ldr	r2, [pc, #308]	@ (8000740 <GPIO_pClckCtrl+0x164>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d900      	bls.n	8000610 <GPIO_pClckCtrl+0x34>
 800060e:	e08f      	b.n	8000730 <GPIO_pClckCtrl+0x154>
 8000610:	4a4c      	ldr	r2, [pc, #304]	@ (8000744 <GPIO_pClckCtrl+0x168>)
 8000612:	4293      	cmp	r3, r2
 8000614:	d100      	bne.n	8000618 <GPIO_pClckCtrl+0x3c>
 8000616:	e065      	b.n	80006e4 <GPIO_pClckCtrl+0x108>
 8000618:	4a4a      	ldr	r2, [pc, #296]	@ (8000744 <GPIO_pClckCtrl+0x168>)
 800061a:	4293      	cmp	r3, r2
 800061c:	d900      	bls.n	8000620 <GPIO_pClckCtrl+0x44>
 800061e:	e087      	b.n	8000730 <GPIO_pClckCtrl+0x154>
 8000620:	4a49      	ldr	r2, [pc, #292]	@ (8000748 <GPIO_pClckCtrl+0x16c>)
 8000622:	4293      	cmp	r3, r2
 8000624:	d04b      	beq.n	80006be <GPIO_pClckCtrl+0xe2>
 8000626:	4a48      	ldr	r2, [pc, #288]	@ (8000748 <GPIO_pClckCtrl+0x16c>)
 8000628:	4293      	cmp	r3, r2
 800062a:	d900      	bls.n	800062e <GPIO_pClckCtrl+0x52>
 800062c:	e080      	b.n	8000730 <GPIO_pClckCtrl+0x154>
 800062e:	4a47      	ldr	r2, [pc, #284]	@ (800074c <GPIO_pClckCtrl+0x170>)
 8000630:	4293      	cmp	r3, r2
 8000632:	d031      	beq.n	8000698 <GPIO_pClckCtrl+0xbc>
 8000634:	4a45      	ldr	r2, [pc, #276]	@ (800074c <GPIO_pClckCtrl+0x170>)
 8000636:	4293      	cmp	r3, r2
 8000638:	d900      	bls.n	800063c <GPIO_pClckCtrl+0x60>
 800063a:	e079      	b.n	8000730 <GPIO_pClckCtrl+0x154>
 800063c:	2290      	movs	r2, #144	@ 0x90
 800063e:	05d2      	lsls	r2, r2, #23
 8000640:	4293      	cmp	r3, r2
 8000642:	d003      	beq.n	800064c <GPIO_pClckCtrl+0x70>
 8000644:	4a42      	ldr	r2, [pc, #264]	@ (8000750 <GPIO_pClckCtrl+0x174>)
 8000646:	4293      	cmp	r3, r2
 8000648:	d013      	beq.n	8000672 <GPIO_pClckCtrl+0x96>
 800064a:	e071      	b.n	8000730 <GPIO_pClckCtrl+0x154>
        case (uint32_t)GPIOA:
            if (state == ENABLE) GPIOA_PCLCK_ENABLE();
 800064c:	1cfb      	adds	r3, r7, #3
 800064e:	781b      	ldrb	r3, [r3, #0]
 8000650:	2b01      	cmp	r3, #1
 8000652:	d107      	bne.n	8000664 <GPIO_pClckCtrl+0x88>
 8000654:	4b3f      	ldr	r3, [pc, #252]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 8000656:	695a      	ldr	r2, [r3, #20]
 8000658:	4b3e      	ldr	r3, [pc, #248]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 800065a:	2180      	movs	r1, #128	@ 0x80
 800065c:	0289      	lsls	r1, r1, #10
 800065e:	430a      	orrs	r2, r1
 8000660:	615a      	str	r2, [r3, #20]
            else GPIOA_PCLCK_DISABLE();
            break;
 8000662:	e067      	b.n	8000734 <GPIO_pClckCtrl+0x158>
            else GPIOA_PCLCK_DISABLE();
 8000664:	4b3b      	ldr	r3, [pc, #236]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 8000666:	695a      	ldr	r2, [r3, #20]
 8000668:	4b3a      	ldr	r3, [pc, #232]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 800066a:	493b      	ldr	r1, [pc, #236]	@ (8000758 <GPIO_pClckCtrl+0x17c>)
 800066c:	400a      	ands	r2, r1
 800066e:	615a      	str	r2, [r3, #20]
            break;
 8000670:	e060      	b.n	8000734 <GPIO_pClckCtrl+0x158>
        case (uint32_t)GPIOB:
            if (state == ENABLE) GPIOB_PCLCK_ENABLE();
 8000672:	1cfb      	adds	r3, r7, #3
 8000674:	781b      	ldrb	r3, [r3, #0]
 8000676:	2b01      	cmp	r3, #1
 8000678:	d107      	bne.n	800068a <GPIO_pClckCtrl+0xae>
 800067a:	4b36      	ldr	r3, [pc, #216]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 800067c:	695a      	ldr	r2, [r3, #20]
 800067e:	4b35      	ldr	r3, [pc, #212]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 8000680:	2180      	movs	r1, #128	@ 0x80
 8000682:	02c9      	lsls	r1, r1, #11
 8000684:	430a      	orrs	r2, r1
 8000686:	615a      	str	r2, [r3, #20]
            else GPIOB_PCLCK_DISABLE();
            break;
 8000688:	e054      	b.n	8000734 <GPIO_pClckCtrl+0x158>
            else GPIOB_PCLCK_DISABLE();
 800068a:	4b32      	ldr	r3, [pc, #200]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 800068c:	695a      	ldr	r2, [r3, #20]
 800068e:	4b31      	ldr	r3, [pc, #196]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 8000690:	4932      	ldr	r1, [pc, #200]	@ (800075c <GPIO_pClckCtrl+0x180>)
 8000692:	400a      	ands	r2, r1
 8000694:	615a      	str	r2, [r3, #20]
            break;
 8000696:	e04d      	b.n	8000734 <GPIO_pClckCtrl+0x158>
        case (uint32_t)GPIOC:
            if (state == ENABLE) GPIOC_PCLCK_ENABLE();
 8000698:	1cfb      	adds	r3, r7, #3
 800069a:	781b      	ldrb	r3, [r3, #0]
 800069c:	2b01      	cmp	r3, #1
 800069e:	d107      	bne.n	80006b0 <GPIO_pClckCtrl+0xd4>
 80006a0:	4b2c      	ldr	r3, [pc, #176]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 80006a2:	695a      	ldr	r2, [r3, #20]
 80006a4:	4b2b      	ldr	r3, [pc, #172]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 80006a6:	2180      	movs	r1, #128	@ 0x80
 80006a8:	0309      	lsls	r1, r1, #12
 80006aa:	430a      	orrs	r2, r1
 80006ac:	615a      	str	r2, [r3, #20]
            else GPIOC_PCLCK_DISABLE();
            break;
 80006ae:	e041      	b.n	8000734 <GPIO_pClckCtrl+0x158>
            else GPIOC_PCLCK_DISABLE();
 80006b0:	4b28      	ldr	r3, [pc, #160]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 80006b2:	695a      	ldr	r2, [r3, #20]
 80006b4:	4b27      	ldr	r3, [pc, #156]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 80006b6:	492a      	ldr	r1, [pc, #168]	@ (8000760 <GPIO_pClckCtrl+0x184>)
 80006b8:	400a      	ands	r2, r1
 80006ba:	615a      	str	r2, [r3, #20]
            break;
 80006bc:	e03a      	b.n	8000734 <GPIO_pClckCtrl+0x158>
        case (uint32_t)GPIOD:
            if (state == ENABLE) GPIOD_PCLCK_ENABLE();
 80006be:	1cfb      	adds	r3, r7, #3
 80006c0:	781b      	ldrb	r3, [r3, #0]
 80006c2:	2b01      	cmp	r3, #1
 80006c4:	d107      	bne.n	80006d6 <GPIO_pClckCtrl+0xfa>
 80006c6:	4b23      	ldr	r3, [pc, #140]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 80006c8:	695a      	ldr	r2, [r3, #20]
 80006ca:	4b22      	ldr	r3, [pc, #136]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 80006cc:	2180      	movs	r1, #128	@ 0x80
 80006ce:	0349      	lsls	r1, r1, #13
 80006d0:	430a      	orrs	r2, r1
 80006d2:	615a      	str	r2, [r3, #20]
            else GPIOD_PCLCK_DISABLE();
            break;
 80006d4:	e02e      	b.n	8000734 <GPIO_pClckCtrl+0x158>
            else GPIOD_PCLCK_DISABLE();
 80006d6:	4b1f      	ldr	r3, [pc, #124]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 80006d8:	695a      	ldr	r2, [r3, #20]
 80006da:	4b1e      	ldr	r3, [pc, #120]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 80006dc:	4921      	ldr	r1, [pc, #132]	@ (8000764 <GPIO_pClckCtrl+0x188>)
 80006de:	400a      	ands	r2, r1
 80006e0:	615a      	str	r2, [r3, #20]
            break;
 80006e2:	e027      	b.n	8000734 <GPIO_pClckCtrl+0x158>
        case (uint32_t)GPIOE:
            if (state == ENABLE) GPIOE_PCLCK_ENABLE();
 80006e4:	1cfb      	adds	r3, r7, #3
 80006e6:	781b      	ldrb	r3, [r3, #0]
 80006e8:	2b01      	cmp	r3, #1
 80006ea:	d107      	bne.n	80006fc <GPIO_pClckCtrl+0x120>
 80006ec:	4b19      	ldr	r3, [pc, #100]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 80006ee:	695a      	ldr	r2, [r3, #20]
 80006f0:	4b18      	ldr	r3, [pc, #96]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 80006f2:	2180      	movs	r1, #128	@ 0x80
 80006f4:	0389      	lsls	r1, r1, #14
 80006f6:	430a      	orrs	r2, r1
 80006f8:	615a      	str	r2, [r3, #20]
            else GPIOE_PCLCK_DISABLE();
            break;
 80006fa:	e01b      	b.n	8000734 <GPIO_pClckCtrl+0x158>
            else GPIOE_PCLCK_DISABLE();
 80006fc:	4b15      	ldr	r3, [pc, #84]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 80006fe:	695a      	ldr	r2, [r3, #20]
 8000700:	4b14      	ldr	r3, [pc, #80]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 8000702:	4919      	ldr	r1, [pc, #100]	@ (8000768 <GPIO_pClckCtrl+0x18c>)
 8000704:	400a      	ands	r2, r1
 8000706:	615a      	str	r2, [r3, #20]
            break;
 8000708:	e014      	b.n	8000734 <GPIO_pClckCtrl+0x158>
        case (uint32_t)GPIOF:
            if (state == ENABLE) GPIOF_PCLCK_ENABLE();
 800070a:	1cfb      	adds	r3, r7, #3
 800070c:	781b      	ldrb	r3, [r3, #0]
 800070e:	2b01      	cmp	r3, #1
 8000710:	d107      	bne.n	8000722 <GPIO_pClckCtrl+0x146>
 8000712:	4b10      	ldr	r3, [pc, #64]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 8000714:	695a      	ldr	r2, [r3, #20]
 8000716:	4b0f      	ldr	r3, [pc, #60]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 8000718:	2180      	movs	r1, #128	@ 0x80
 800071a:	03c9      	lsls	r1, r1, #15
 800071c:	430a      	orrs	r2, r1
 800071e:	615a      	str	r2, [r3, #20]
            else GPIOF_PCLCK_DISABLE();
            break;
 8000720:	e008      	b.n	8000734 <GPIO_pClckCtrl+0x158>
            else GPIOF_PCLCK_DISABLE();
 8000722:	4b0c      	ldr	r3, [pc, #48]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 8000724:	695a      	ldr	r2, [r3, #20]
 8000726:	4b0b      	ldr	r3, [pc, #44]	@ (8000754 <GPIO_pClckCtrl+0x178>)
 8000728:	4910      	ldr	r1, [pc, #64]	@ (800076c <GPIO_pClckCtrl+0x190>)
 800072a:	400a      	ands	r2, r1
 800072c:	615a      	str	r2, [r3, #20]
            break;
 800072e:	e001      	b.n	8000734 <GPIO_pClckCtrl+0x158>
        default:
            return GPIO_ERROR_INVALID_GPIO;
 8000730:	2302      	movs	r3, #2
 8000732:	e000      	b.n	8000736 <GPIO_pClckCtrl+0x15a>
    }

    return GPIO_OK;
 8000734:	2300      	movs	r3, #0
}
 8000736:	0018      	movs	r0, r3
 8000738:	46bd      	mov	sp, r7
 800073a:	b002      	add	sp, #8
 800073c:	bd80      	pop	{r7, pc}
 800073e:	46c0      	nop			@ (mov r8, r8)
 8000740:	48001400 	.word	0x48001400
 8000744:	48001000 	.word	0x48001000
 8000748:	48000c00 	.word	0x48000c00
 800074c:	48000800 	.word	0x48000800
 8000750:	48000400 	.word	0x48000400
 8000754:	40021000 	.word	0x40021000
 8000758:	fffdffff 	.word	0xfffdffff
 800075c:	fffbffff 	.word	0xfffbffff
 8000760:	fff7ffff 	.word	0xfff7ffff
 8000764:	ffefffff 	.word	0xffefffff
 8000768:	ffdfffff 	.word	0xffdfffff
 800076c:	ffbfffff 	.word	0xffbfffff

08000770 <GPIO_WriteToOutputPin>:
 * Return value			: Value ranging 0-255
 *
 * ===============================================================================================
 */
uint8_t GPIO_WriteToOutputPin (GPIO_Reg_t *pGPIOx, uint8_t PinNum, uint8_t data)
{
 8000770:	b580      	push	{r7, lr}
 8000772:	b082      	sub	sp, #8
 8000774:	af00      	add	r7, sp, #0
 8000776:	6078      	str	r0, [r7, #4]
 8000778:	0008      	movs	r0, r1
 800077a:	0011      	movs	r1, r2
 800077c:	1cfb      	adds	r3, r7, #3
 800077e:	1c02      	adds	r2, r0, #0
 8000780:	701a      	strb	r2, [r3, #0]
 8000782:	1cbb      	adds	r3, r7, #2
 8000784:	1c0a      	adds	r2, r1, #0
 8000786:	701a      	strb	r2, [r3, #0]
	  if(data == SET)
 8000788:	1cbb      	adds	r3, r7, #2
 800078a:	781b      	ldrb	r3, [r3, #0]
 800078c:	2b01      	cmp	r3, #1
 800078e:	d10a      	bne.n	80007a6 <GPIO_WriteToOutputPin+0x36>
	    {
	        /* Write 1 to the output data register at the bit field corresponding to the pin number */
	        pGPIOx->ODR |= ( 1 << PinNum );
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	695b      	ldr	r3, [r3, #20]
 8000794:	1cfa      	adds	r2, r7, #3
 8000796:	7812      	ldrb	r2, [r2, #0]
 8000798:	2101      	movs	r1, #1
 800079a:	4091      	lsls	r1, r2
 800079c:	000a      	movs	r2, r1
 800079e:	431a      	orrs	r2, r3
 80007a0:	687b      	ldr	r3, [r7, #4]
 80007a2:	615a      	str	r2, [r3, #20]
 80007a4:	e00a      	b.n	80007bc <GPIO_WriteToOutputPin+0x4c>
	    }
	    else
	    {
	        /* Write 0 to the output data register at the bit field corresponding to the pin number */
	        pGPIOx->ODR &= ~( 1 << PinNum );	//Clear pin
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	695b      	ldr	r3, [r3, #20]
 80007aa:	1cfa      	adds	r2, r7, #3
 80007ac:	7812      	ldrb	r2, [r2, #0]
 80007ae:	2101      	movs	r1, #1
 80007b0:	4091      	lsls	r1, r2
 80007b2:	000a      	movs	r2, r1
 80007b4:	43d2      	mvns	r2, r2
 80007b6:	401a      	ands	r2, r3
 80007b8:	687b      	ldr	r3, [r7, #4]
 80007ba:	615a      	str	r2, [r3, #20]
	    }
  return data;
 80007bc:	1cbb      	adds	r3, r7, #2
 80007be:	781b      	ldrb	r3, [r3, #0]
}
 80007c0:	0018      	movs	r0, r3
 80007c2:	46bd      	mov	sp, r7
 80007c4:	b002      	add	sp, #8
 80007c6:	bd80      	pop	{r7, pc}

080007c8 <GPIO_ToggleOutputPin>:
 * Return value			: NULL
 *
 * ===============================================================================================
 */
void GPIO_ToggleOutputPin  				(GPIO_Reg_t *pGPIOx, uint8_t PinNum)
{
 80007c8:	b580      	push	{r7, lr}
 80007ca:	b082      	sub	sp, #8
 80007cc:	af00      	add	r7, sp, #0
 80007ce:	6078      	str	r0, [r7, #4]
 80007d0:	000a      	movs	r2, r1
 80007d2:	1cfb      	adds	r3, r7, #3
 80007d4:	701a      	strb	r2, [r3, #0]

	pGPIOx->ODR ^= (1 << PinNum);
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	695b      	ldr	r3, [r3, #20]
 80007da:	1cfa      	adds	r2, r7, #3
 80007dc:	7812      	ldrb	r2, [r2, #0]
 80007de:	2101      	movs	r1, #1
 80007e0:	4091      	lsls	r1, r2
 80007e2:	000a      	movs	r2, r1
 80007e4:	405a      	eors	r2, r3
 80007e6:	687b      	ldr	r3, [r7, #4]
 80007e8:	615a      	str	r2, [r3, #20]

}
 80007ea:	46c0      	nop			@ (mov r8, r8)
 80007ec:	46bd      	mov	sp, r7
 80007ee:	b002      	add	sp, #8
 80007f0:	bd80      	pop	{r7, pc}
	...

080007f4 <GPIO_IRQConfig>:
 * Return value			: NULL
 *
 * ===============================================================================================
 */
void GPIO_IRQConfig(uint8_t IRQNumber, uint8_t status)
{
 80007f4:	b580      	push	{r7, lr}
 80007f6:	b082      	sub	sp, #8
 80007f8:	af00      	add	r7, sp, #0
 80007fa:	0002      	movs	r2, r0
 80007fc:	1dfb      	adds	r3, r7, #7
 80007fe:	701a      	strb	r2, [r3, #0]
 8000800:	1dbb      	adds	r3, r7, #6
 8000802:	1c0a      	adds	r2, r1, #0
 8000804:	701a      	strb	r2, [r3, #0]
  if(status==ENABLE)
 8000806:	1dbb      	adds	r3, r7, #6
 8000808:	781b      	ldrb	r3, [r3, #0]
 800080a:	2b01      	cmp	r3, #1
 800080c:	d10b      	bne.n	8000826 <GPIO_IRQConfig+0x32>
	  *NVIC_ISER |= (1 << IRQNumber);
 800080e:	4b0d      	ldr	r3, [pc, #52]	@ (8000844 <GPIO_IRQConfig+0x50>)
 8000810:	681a      	ldr	r2, [r3, #0]
 8000812:	1dfb      	adds	r3, r7, #7
 8000814:	781b      	ldrb	r3, [r3, #0]
 8000816:	2101      	movs	r1, #1
 8000818:	4099      	lsls	r1, r3
 800081a:	000b      	movs	r3, r1
 800081c:	0019      	movs	r1, r3
 800081e:	4b09      	ldr	r3, [pc, #36]	@ (8000844 <GPIO_IRQConfig+0x50>)
 8000820:	430a      	orrs	r2, r1
 8000822:	601a      	str	r2, [r3, #0]
  else
	  *NVIC_ICER |= (1 << IRQNumber);

}
 8000824:	e00a      	b.n	800083c <GPIO_IRQConfig+0x48>
	  *NVIC_ICER |= (1 << IRQNumber);
 8000826:	4b08      	ldr	r3, [pc, #32]	@ (8000848 <GPIO_IRQConfig+0x54>)
 8000828:	681a      	ldr	r2, [r3, #0]
 800082a:	1dfb      	adds	r3, r7, #7
 800082c:	781b      	ldrb	r3, [r3, #0]
 800082e:	2101      	movs	r1, #1
 8000830:	4099      	lsls	r1, r3
 8000832:	000b      	movs	r3, r1
 8000834:	0019      	movs	r1, r3
 8000836:	4b04      	ldr	r3, [pc, #16]	@ (8000848 <GPIO_IRQConfig+0x54>)
 8000838:	430a      	orrs	r2, r1
 800083a:	601a      	str	r2, [r3, #0]
}
 800083c:	46c0      	nop			@ (mov r8, r8)
 800083e:	46bd      	mov	sp, r7
 8000840:	b002      	add	sp, #8
 8000842:	bd80      	pop	{r7, pc}
 8000844:	e000e100 	.word	0xe000e100
 8000848:	e000e180 	.word	0xe000e180

0800084c <GPIO_IRQPriorityConfig>:
 *
 * ===============================================================================================
 */

void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 800084c:	b590      	push	{r4, r7, lr}
 800084e:	b085      	sub	sp, #20
 8000850:	af00      	add	r7, sp, #0
 8000852:	0002      	movs	r2, r0
 8000854:	6039      	str	r1, [r7, #0]
 8000856:	1dfb      	adds	r3, r7, #7
 8000858:	701a      	strb	r2, [r3, #0]
    uint8_t IPRx = IRQNumber / 4;
 800085a:	200f      	movs	r0, #15
 800085c:	183b      	adds	r3, r7, r0
 800085e:	1dfa      	adds	r2, r7, #7
 8000860:	7812      	ldrb	r2, [r2, #0]
 8000862:	0892      	lsrs	r2, r2, #2
 8000864:	701a      	strb	r2, [r3, #0]
    uint8_t IPRxgroup = IRQNumber % 4;
 8000866:	240e      	movs	r4, #14
 8000868:	193b      	adds	r3, r7, r4
 800086a:	1dfa      	adds	r2, r7, #7
 800086c:	7812      	ldrb	r2, [r2, #0]
 800086e:	2103      	movs	r1, #3
 8000870:	400a      	ands	r2, r1
 8000872:	701a      	strb	r2, [r3, #0]

    uint8_t offset = (8 * IPRxgroup) + (8 - NO_PR_BITS_IMPLEMENTED);
 8000874:	193b      	adds	r3, r7, r4
 8000876:	781b      	ldrb	r3, [r3, #0]
 8000878:	00db      	lsls	r3, r3, #3
 800087a:	b2da      	uxtb	r2, r3
 800087c:	240d      	movs	r4, #13
 800087e:	193b      	adds	r3, r7, r4
 8000880:	3206      	adds	r2, #6
 8000882:	701a      	strb	r2, [r3, #0]
    *(NVIC_PR_BASE_ADDR + IPRx) |= (IRQPriority << offset);
 8000884:	183b      	adds	r3, r7, r0
 8000886:	781b      	ldrb	r3, [r3, #0]
 8000888:	009b      	lsls	r3, r3, #2
 800088a:	4a0a      	ldr	r2, [pc, #40]	@ (80008b4 <GPIO_IRQPriorityConfig+0x68>)
 800088c:	4694      	mov	ip, r2
 800088e:	4463      	add	r3, ip
 8000890:	6819      	ldr	r1, [r3, #0]
 8000892:	193b      	adds	r3, r7, r4
 8000894:	781b      	ldrb	r3, [r3, #0]
 8000896:	683a      	ldr	r2, [r7, #0]
 8000898:	409a      	lsls	r2, r3
 800089a:	183b      	adds	r3, r7, r0
 800089c:	781b      	ldrb	r3, [r3, #0]
 800089e:	009b      	lsls	r3, r3, #2
 80008a0:	4804      	ldr	r0, [pc, #16]	@ (80008b4 <GPIO_IRQPriorityConfig+0x68>)
 80008a2:	4684      	mov	ip, r0
 80008a4:	4463      	add	r3, ip
 80008a6:	430a      	orrs	r2, r1
 80008a8:	601a      	str	r2, [r3, #0]

}
 80008aa:	46c0      	nop			@ (mov r8, r8)
 80008ac:	46bd      	mov	sp, r7
 80008ae:	b005      	add	sp, #20
 80008b0:	bd90      	pop	{r4, r7, pc}
 80008b2:	46c0      	nop			@ (mov r8, r8)
 80008b4:	e000e400 	.word	0xe000e400

080008b8 <GPIO_IRQHandler>:
 * Return value			: NULL
 *
 * ===============================================================================================
 */
void GPIO_IRQHandler(uint8_t PinNum)
{
 80008b8:	b580      	push	{r7, lr}
 80008ba:	b082      	sub	sp, #8
 80008bc:	af00      	add	r7, sp, #0
 80008be:	0002      	movs	r2, r0
 80008c0:	1dfb      	adds	r3, r7, #7
 80008c2:	701a      	strb	r2, [r3, #0]

    /* Clear the PR register corresponding to pin number */
    if(EXTI->EXTI_PR & (1 << PinNum))
 80008c4:	4b0b      	ldr	r3, [pc, #44]	@ (80008f4 <GPIO_IRQHandler+0x3c>)
 80008c6:	695b      	ldr	r3, [r3, #20]
 80008c8:	1dfa      	adds	r2, r7, #7
 80008ca:	7812      	ldrb	r2, [r2, #0]
 80008cc:	2101      	movs	r1, #1
 80008ce:	4091      	lsls	r1, r2
 80008d0:	000a      	movs	r2, r1
 80008d2:	4013      	ands	r3, r2
 80008d4:	d00a      	beq.n	80008ec <GPIO_IRQHandler+0x34>
    {
        /* Clear pin */
        EXTI->EXTI_PR |= (1 << PinNum);
 80008d6:	4b07      	ldr	r3, [pc, #28]	@ (80008f4 <GPIO_IRQHandler+0x3c>)
 80008d8:	695a      	ldr	r2, [r3, #20]
 80008da:	1dfb      	adds	r3, r7, #7
 80008dc:	781b      	ldrb	r3, [r3, #0]
 80008de:	2101      	movs	r1, #1
 80008e0:	4099      	lsls	r1, r3
 80008e2:	000b      	movs	r3, r1
 80008e4:	0019      	movs	r1, r3
 80008e6:	4b03      	ldr	r3, [pc, #12]	@ (80008f4 <GPIO_IRQHandler+0x3c>)
 80008e8:	430a      	orrs	r2, r1
 80008ea:	615a      	str	r2, [r3, #20]
    }
}
 80008ec:	46c0      	nop			@ (mov r8, r8)
 80008ee:	46bd      	mov	sp, r7
 80008f0:	b002      	add	sp, #8
 80008f2:	bd80      	pop	{r7, pc}
 80008f4:	40010400 	.word	0x40010400

080008f8 <memset>:
 80008f8:	0003      	movs	r3, r0
 80008fa:	1882      	adds	r2, r0, r2
 80008fc:	4293      	cmp	r3, r2
 80008fe:	d100      	bne.n	8000902 <memset+0xa>
 8000900:	4770      	bx	lr
 8000902:	7019      	strb	r1, [r3, #0]
 8000904:	3301      	adds	r3, #1
 8000906:	e7f9      	b.n	80008fc <memset+0x4>

08000908 <__libc_init_array>:
 8000908:	b570      	push	{r4, r5, r6, lr}
 800090a:	2600      	movs	r6, #0
 800090c:	4c0c      	ldr	r4, [pc, #48]	@ (8000940 <__libc_init_array+0x38>)
 800090e:	4d0d      	ldr	r5, [pc, #52]	@ (8000944 <__libc_init_array+0x3c>)
 8000910:	1b64      	subs	r4, r4, r5
 8000912:	10a4      	asrs	r4, r4, #2
 8000914:	42a6      	cmp	r6, r4
 8000916:	d109      	bne.n	800092c <__libc_init_array+0x24>
 8000918:	2600      	movs	r6, #0
 800091a:	f000 f819 	bl	8000950 <_init>
 800091e:	4c0a      	ldr	r4, [pc, #40]	@ (8000948 <__libc_init_array+0x40>)
 8000920:	4d0a      	ldr	r5, [pc, #40]	@ (800094c <__libc_init_array+0x44>)
 8000922:	1b64      	subs	r4, r4, r5
 8000924:	10a4      	asrs	r4, r4, #2
 8000926:	42a6      	cmp	r6, r4
 8000928:	d105      	bne.n	8000936 <__libc_init_array+0x2e>
 800092a:	bd70      	pop	{r4, r5, r6, pc}
 800092c:	00b3      	lsls	r3, r6, #2
 800092e:	58eb      	ldr	r3, [r5, r3]
 8000930:	4798      	blx	r3
 8000932:	3601      	adds	r6, #1
 8000934:	e7ee      	b.n	8000914 <__libc_init_array+0xc>
 8000936:	00b3      	lsls	r3, r6, #2
 8000938:	58eb      	ldr	r3, [r5, r3]
 800093a:	4798      	blx	r3
 800093c:	3601      	adds	r6, #1
 800093e:	e7f2      	b.n	8000926 <__libc_init_array+0x1e>
 8000940:	08000968 	.word	0x08000968
 8000944:	08000968 	.word	0x08000968
 8000948:	0800096c 	.word	0x0800096c
 800094c:	08000968 	.word	0x08000968

08000950 <_init>:
 8000950:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000952:	46c0      	nop			@ (mov r8, r8)
 8000954:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000956:	bc08      	pop	{r3}
 8000958:	469e      	mov	lr, r3
 800095a:	4770      	bx	lr

0800095c <_fini>:
 800095c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800095e:	46c0      	nop			@ (mov r8, r8)
 8000960:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000962:	bc08      	pop	{r3}
 8000964:	469e      	mov	lr, r3
 8000966:	4770      	bx	lr
